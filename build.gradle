plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.3'
	id 'io.spring.dependency-management' version '1.1.6'
	id 'jacoco'
	id 'org.sonarqube' version '5.1.0.4882'
}

group = 'co.com.devco'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-jdbc'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'com.h2database:h2'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	testImplementation 'org.assertj:assertj-core:3.26.3'
	implementation 'org.mockito:mockito-core:5.13.0'
	implementation 'org.springframework.boot:spring-boot-starter-validation:3.3.3'
	testImplementation 'org.hamcrest:hamcrest:2.1'
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.6.0'

}

tasks.named('test') {
	useJUnitPlatform()
}

test {
	finalizedBy jacocoTestReport // report is always generated after tests run
}
jacocoTestReport {
	dependsOn test // tests are required to run before generating the report
}

jacoco {
	toolVersion = "0.8.12"
}

jacocoTestReport {
	reports {
		xml.required = true
		csv.required = false
		html.outputLocation = layout.buildDirectory.dir('jacocoHtml')
	}
}
